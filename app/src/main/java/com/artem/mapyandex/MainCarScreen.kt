// MainCarScreen.kt
package com.artem.mapyandex

import androidx.car.app.CarContext
import androidx.car.app.Screen
import androidx.car.app.model.*
import androidx.lifecycle.lifecycleScope
import kotlinx.coroutines.launch

class MainCarScreen(carContext: CarContext) : Screen(carContext) {

    private var currentSpeed = 0
    private var nearestCamera = "–ó–∞–≥—Ä—É–∑–∫–∞..."
    private var currentLocation = "–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã"
    private var cameraAlert = ""
    private var lastUpdateTime = "–ù–∏–∫–æ–≥–¥–∞"

    override fun onGetTemplate(): Template {
        return PaneTemplate.Builder(createPane())
            .setTitle("–ú–û–ô –ù–ê–í–ò–ì–ê–¢–û–†")
            .setHeaderAction(Action.BACK)
            .setActionStrip(createActionStrip())
            .build()
    }

    private fun createPane(): Pane {
        val paneBuilder = Pane.Builder()

        // –°–µ–∫—Ü–∏—è –æ—Ç–ª–∞–¥–∫–∏ - –ø–æ–∫–∞–∂–µ–º —Å—Ç–∞—Ç—É—Å –¥–∞–Ω–Ω—ã—Ö
        paneBuilder.addRow(
            Row.Builder()
                .setTitle("üîß –°–¢–ê–¢–£–° –î–ê–ù–ù–´–•")
                .addText(lastUpdateTime)
                .build()
        )

        // –°–µ–∫—Ü–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏
        paneBuilder.addRow(
            Row.Builder()
                .setTitle("üöó –¢–ï–ö–£–©–ê–Ø –°–ö–û–†–û–°–¢–¨")
                .addText("$currentSpeed –∫–º/—á")
                .build()
        )

        // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –∫–∞–º–µ—Ä–µ
        if (cameraAlert.isNotEmpty()) {
            paneBuilder.addRow(
                Row.Builder()
                    .setTitle("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï!")
                    .addText(cameraAlert)
                    .build()
            )
        }

        // –°–µ–∫—Ü–∏—è –∫–∞–º–µ—Ä
        paneBuilder.addRow(
            Row.Builder()
                .setTitle("üì∑ –ë–õ–ò–ñ–ê–ô–®–ê–Ø –ö–ê–ú–ï–†–ê")
                .addText(nearestCamera)
                .build()
        )

        // –°–µ–∫—Ü–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
        paneBuilder.addRow(
            Row.Builder()
                .setTitle("üìç –ú–ï–°–¢–û–ü–û–õ–û–ñ–ï–ù–ò–ï")
                .addText(currentLocation)
                .build()
        )

        return paneBuilder.build()
    }

    private fun createActionStrip(): ActionStrip {
        return ActionStrip.Builder()
            .addAction(
                Action.Builder()
                    .setTitle("üîÑ –û–ë–ù–û–í–ò–¢–¨")
                    .setOnClickListener { updateData() }
                    .build()
            )
            .addAction(
                Action.Builder()
                    .setTitle("üìã –ö–ê–ú–ï–†–´")
                    .setOnClickListener {
                        screenManager.push(CamerasCarScreen(carContext))
                    }
                    .build()
            )
            .build()
    }

    private fun updateData() {
        lifecycleScope.launch {
            loadDataFromMainApp()
            invalidate()
        }
    }

    private fun loadDataFromMainApp() {
        val sharedPref = carContext.getSharedPreferences("car_data", CarContext.MODE_PRIVATE)

        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        val lat = sharedPref.getFloat("current_lat", 0f)
        val lon = sharedPref.getFloat("current_lon", 0f)

        currentSpeed = sharedPref.getInt("current_speed", 0)
        cameraAlert = sharedPref.getString("camera_alert", "") ?: ""

        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        currentLocation = if (lat != 0f && lon != 0f) {
            "–®:${"%.6f".format(lat)}\n–î:${"%.6f".format(lon)}"
        } else {
            "‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã"
        }

        nearestCamera = sharedPref.getString("nearest_camera", "‚è≥ –†–∞—Å—á–µ—Ç...") ?: "‚è≥ –†–∞—Å—á–µ—Ç..."

        // –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        lastUpdateTime = "–û–±–Ω–æ–≤–ª–µ–Ω–æ: ${java.text.SimpleDateFormat("HH:mm:ss").format(java.util.Date())}"
    }

//    override fun onResume() {
//        super.onResume()
//        updateData()
//    }
}